plugins {
	id "java"
	id "io.freefair.lombok" version "4.1.6" //https://projectlombok.org/setup/gradle
	id "org.springframework.boot" version "2.2.5.RELEASE"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

group = "com.incarcloud"
version = "0.1.1-SNAPSHOT"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
	springBootVersion = "2.2.5.RELEASE"
}

repositories {
	maven { url "https://maven.aliyun.com/repository/public" }
	maven { url "https://repository.incarcloud.com/content/groups/public" }
}

dependencies {
	// jar reuse with api
	implementation "com.incarcloud:reuse-system-api-impl"

	// jar reuse
	implementation "com.incarcloud:reuse-autoconfig-swagger2"

	//implementation "io.swagger:swagger-annotations:1.5.24"
	implementation "org.springframework.boot:spring-boot-starter-web"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
	}

	dependencies {
		dependency "com.incarcloud:reuse-system-api-impl:0.6.0-SNAPSHOT"
		dependency "com.incarcloud:reuse-autoconfig-swagger2:0.6.0-SNAPSHOT"
	}
}

compileJava {
	options.encoding = "UTF-8"
	options.compilerArgs << "-Xlint:unchecked"
}

compileTestJava {
	options.encoding = "UTF-8"
	options.compilerArgs << "-Xlint:unchecked"
}

task removeLombokConfig() {
	def subProjectPath = project.projectDir
	if (null != subProjectPath) {
		def lombokConfigFile = new File(subProjectPath, "lombok.config")
		if (lombokConfigFile.exists()) {
			lombokConfigFile.delete()
		}
	}
}

defaultTasks "assemble"
